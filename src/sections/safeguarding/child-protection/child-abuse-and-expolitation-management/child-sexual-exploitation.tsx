import { Grid, InputLabel, useTheme } from '@mui/material';
import { FormProvider } from '@root/components/hook-form'
import React from 'react'
import { useForm } from 'react-hook-form';
import { childCrimialExploitation } from './formData/child-criminal-exploitation-form-data';
import { yupResolver } from '@hookform/resolvers/yup';
import * as Yup from "yup";


const ChildSexualExploitation = () => {
  const theme = useTheme();
  const methods: any = useForm({
    resolver: yupResolver(Yup.object().shape({
      childName: Yup.string().required('Field is required'),
      reportingDate: Yup.string().required('Field is required'),
      signAndIndicators: Yup.string().required('Field is required'),
      whoIsRisk: Yup.string().required('Field is required'),
    })),
    defaultValues: { childName: '', reportingDate: '', signAndIndicators: '', whoIsRisk: '' },
  });

  const {
    reset,
    control,
    register,
    setValue,
    handleSubmit,
    formState: { errors, isSubmitting, isDirty },
  } = methods;

  const onSubmit = async (data: any) => {
  };

  return (
    <FormProvider
      methods={methods} onSubmit={handleSubmit(onSubmit)}
    >
      <Grid container spacing={4}>
        {childCrimialExploitation.map((form: any, i: number) => (
          <Grid item xs={12} md={form.gridLength} key={i}>
            <InputLabel
              sx={{
                fontWeight: 600, mt: '-20px', mb: '20px', color: theme.palette.grey[600]
              }}
            >{form.head}
            </InputLabel>
            <InputLabel
              sx={{
                fontWeight: 500, mb: 0.3, color: theme.palette.mode === 'light' ? '#343A40' : theme.palette.mode
              }}
            >{form.title}
            </InputLabel>
            <form.component
              size='small'
              {...form.otherOptions}
            >
            </form.component>
          </Grid>
        ))}
      </Grid>
    </FormProvider>
  )
}

export default ChildSexualExploitation